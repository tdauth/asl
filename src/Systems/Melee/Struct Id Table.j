library AStructSystemsMeleeIdTable requires AStructCoreGeneralList, AStructSystemsMeleeIdSet

	/**
	 * \brief List of \ref AIdSet instances.
	 * One single table can generate multiple object data ids from multiple id sets.
	 * For single id generation only use \ref AIdSet.
	 * \sa AAbstractIdItem, AIdSet
	 */
	struct AIdTable extends AIntegerList

		public method addSet takes AIdSet whichSet returns nothing
			call this.pushBack(whichSet)
		endmethod

		public method removeSet takes AIdSet whichSet returns nothing
			call this.remove(whichSet)
		endmethod

		/**
		 * Generates a list of object data ids which is generated by all \ref AIdSet entries in the table.
		 * \return Returns a list with all generated object data ids.
		 * \note The list has to be freed manually.
		 */
		public method generate takes nothing returns AIntegerList
			local AIntegerList result = AIntegerList.create()
			local AIntegerListIterator iterator = this.begin()
			local integer id
			loop
				exitwhen (not iterator.isValid())
				set id = AIdSet(iterator.data()).generate()
				if (id != 0) then
					call result.pushBack(id)
				endif
				call iterator.next()
			endloop
			call iterator.destroy()
			return result
		endmethod
	endstruct

endlibrary