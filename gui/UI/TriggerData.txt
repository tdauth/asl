//***************************************************************************
[TriggerCategories]
// Defines categories for organizing trigger functions
// Key: Arbitrary category identifier
// Value 0: Display text
// Value 1: Icon image file
// Value 2: Optional flag (defaults to 0) indicating to disable display of category name
//

// ASL
TC_ASL_CORE_GENERAL=WESTRING_ASL_TRIGCAT_CORE_GENERAL,ReplaceableTextures\WorldEditUI\Actions-Nothing
TC_ASL_CORE_DEBUG=WESTRING_ASL_TRIGCAT_CORE_DEBUG,ReplaceableTextures\WorldEditUI\Actions-Nothing
TC_ASL_CORE_ENVIRONMENT=WESTRING_ASL_TRIGCAT_CORE_ENVIRONMENT,ReplaceableTextures\WorldEditUI\Actions-Nothing
TC_ASL_CORE_STRING=WESTRING_ASL_TRIGCAT_CORE_STRING,ReplaceableTextures\WorldEditUI\Actions-Nothing
TC_ASL_SYSTEMS_BONUS_MOD=WESTRING_ASL_TRIGCAT_SYSTEMS_BONUS_MOD,ReplaceableTextures\WorldEditUI\Actions-Nothing
TC_ASL_SYSTEMS_CHARACTER=WESTRING_ASL_TRIGCAT_SYSTEMS_CHARACTER,ReplaceableTextures\WorldEditUI\Actions-Nothing
TC_ASL_SYSTEMS_WORLD=WESTRING_ASL_TRIGCAT_SYSTEMS_WORLD,ReplaceableTextures\WorldEditUI\Actions-Nothing

//***************************************************************************
[TriggerTypes]
// Defines all trigger variable types to be used by the Script Editor
// Key: type name
// Value 0: first game version in which this type is valid
// Value 1: flag (0 or 1) indicating if this type can be a global variable
// Value 2: flag (0 or 1) indicating if this type can be used with comparison operators
// Value 3: string to display in the editor
// Value 4: base type, used only for custom types
// Value 5: import type, for strings which represent files (optional)
// Value 6: flag (0 or 1) indicating to treat this type as the base type in the editor

// Trigger Variable Types
// These are sorted so that they appear as such in the Variables dialog.
// ASL
ABonusType=0,1,1,WESTRING_ASL_TRIGTYPE_A_BONUS_TYPE,integer
ACharacter=0,1,1,WESTRING_ASL_TRIGTYPE_ACHARACTER,integer
ARoutine=0,1,1,WESTRING_ASL_TRIGTYPE_AROUTINE,integer
ASpawnPoint=0,1,1,WESTRING_ASL_TRIGTYPE_ASPAWNPOINT,integer
AWeather=0,1,1,WESTRING_ASL_TRIGTYPE_AWEATHER,integer

// ASL - Non-Variable Types
AMovableValue=0,0,1,WESTRING_ASL_TRIGTYPE_AMOVABLEVALUE,boolean
AAttackableValue=0,0,1,WESTRING_ASL_TRIGTYPE_AATTACKABLEVALUE,boolean


//***************************************************************************
[TriggerTypeDefaults]
// Defines an optional default value for a trigger type used as a global variable
// Key: variable type
// Value 0: script text
// Value 1: display text (if not present, script text will be used)
//
// If a type does not have an entry here, it will be set to null if it is a handle
//

// virtual type for integer constants and type safety
ABonusType=0,WESTRING_ASL_BONUS_TYPE_DAMAGE
ACharacter=0,WESTRING_ASL_TRIGDEFAULT_CHARACTER
ARoutine=0,WESTRING_ASL_TRIGDEFAULT_ROUTINE
ASpawnPoint=0,WESTRING_ASL_TRIGDEFAULT_SPAWNPOINT
AWeather=0,WESTRING_ASL_TRIGDEFAULT_WEATHER

//***************************************************************************
[TriggerParams]
// Defines possible values for variable types
// Key: arbitrary text
// Value 0: first game version in which this parameter is valid
// Value 1: variable type
// Value 2: code text (used in script)
// Value 3: display text
//
// Note: If the code text is a literal string, surround it with backward single quotes (`),
//       and they will be converted to double quotes in the script.
//

// ASL
ASystems=1,boolean,A_SYSTEMS,WESTRING_ASL_SYSTEMSAVAILABILITY
AObjects=1,boolean,A_OBJECTS,WESTRING_ASL_OBJECTSAVAILABILITY
ADebugHandles=1,boolean,A_DEBUG_HANDLES,WESTRING_ASL_DEBUGHANDLESAVAILABILITY
ADebugNatives=1,boolean,A_DEBUG_NATIVES,WESTRING_ASL_DEBUGNATIVESAVAILABILITY
AMesgHelloWorld=1,string,WESTRING_ASL_HELLO_WORLD,WESTRING_ASL_HELLO_WORLD
AMesgASpawnPointInit=1,string,WESTRING_ASL_ASPAWNPOINTINIT_MESG,WESTRING_ASL_ASPAWNPOINTINIT_MESG

AMovableValueTrue=1,AMovableValue,true,WESTRING_ASL_MOVABLEVALUETRUE
AMovableValueFalse=1,AMovableValue,false,WESTRING_ASL_MOVABLEVALUEFALSE

AAttackableValueTrue=1,AAttackableValue,true,WESTRING_ASL_ATTACKABLEVALUETRUE
AAttackableValueFalse=1,AAttackableValue,false,WESTRING_ASL_ATTACKABLEVALUEFALSE

ABonusTypeDamage=1,ABonusType,A_BONUS_TYPE_DAMAGE,A_BONUS_TYPE_DAMAGE,WESTRING_ASL_BONUS_TYPE_DAMAGE
ABonusTypeArmor=1,ABonusType,A_BONUS_TYPE_ARMOR,A_BONUS_TYPE_ARMOR,WESTRING_ASL_BONUS_TYPE_ARMOR
ABonusTypeLife=1,ABonusType,A_BONUS_TYPE_LIFE,A_BONUS_TYPE_LIFE,WESTRING_ASL_BONUS_TYPE_LIFE
ABonusTypeMana=1,ABonusType,A_BONUS_TYPE_MANA,A_BONUS_TYPE_MANA,WESTRING_ASL_BONUS_TYPE_MANA
ABonusTypeSightRange=1,ABonusType,A_BONUS_TYPE_SIGHT_RANGE,WESTRING_ASL_BONUS_TYPE_SIGHT_RANGE
ABonusTypeLifeRegeneration=1,ABonusType,A_BONUS_TYPE_LIFE_REGENERATION,WESTRING_ASL_BONUS_TYPE_LIFE_REGENERATION
ABonusTypeManaRegeneration=1,ABonusType,A_BONUS_TYPE_MANA_REGENERATION,WESTRING_ASL_BONUS_TYPE_MANA_REGENERATION

//***************************************************************************
[TriggerEvents]
// Defines events available in the editor
// Key: script event function
// Value 0: first game version in which this function is valid
// Value 1+: argument types
// Note that the first argument is always a `trigger`, and is excluded here

// Special events not defined in scripts, handled internally by the editor

//***************************************************************************
[TriggerConditions]
// Defines boolean condition functions
// Key: condition function name
// Value 0: first game version in which this function is valid
// Value 1+: argument types

// ASL


//***************************************************************************
[TriggerActions]
// Defines action functions
// Key: action function name
// Value 0: first game version in which this function is valid
// Value 1+: argument types

// ASL
sc__Asl_init=1,nothing
_sc__Asl_init_Defaults=
_sc__Asl_init_Limits=
_sc__Asl_init_Category=TC_ASL_CORE_GENERAL

Print=1,StringExt
_Print_Defaults=AMesgHelloWorld
_Print_Limits=
_Print_Category=TC_ASL_CORE_DEBUG

PrintIf=1,boolean,StringExt
_PrintIf_Defaults=true,AMesgHelloWorld
_PrintIf_Limits=
_PrintIf_Category=TC_ASL_CORE_DEBUG

MakeUnitMovable=1,unit,AMovableValue
_MakeUnitMovable_Defaults=_,AMovableValueTrue
_MakeUnitMovable_Limits=
_MakeUnitMovable_Category=TC_ASL_CORE_ENVIRONMENT

MakeUnitAttackable=1,unit,AAttackableValue
_MakeUnitAttackable_Defaults=_,AAttackableValueTrue
_MakeUnitAttackable_Limits=
_MakeUnitAttackable_Category=TC_ASL_CORE_ENVIRONMENT

// Bonus Mod
AInitBonusMod=1,nothing
_AInitBonusMod_Defaults=
_AInitBonusMod_Limits=
_AInitBonusMod_Category=TC_ASL_SYSTEMS_BONUS_MOD

sc__ASpawnPoint_init=1,real,modelfile,soundfile,integer,boolean,player,StringExt
_sc__ASpawnPoint_init_Defaults=60.0,"Objects\\Spawnmodels\\NightElf\\EntBirthTarget\\EntBirthTarget.mdl","Abilities\\Spells\\Orc\\EtherealForm\\SpiritWalkerMorph.wav",50,false,PlayerNA,AMesgASpawnPointInit
_sc__ASpawnPoint_init_Limits=
_sc__ASpawnPoint_init_Category=TC_ASL_SYSTEMS_WORLD

sc__ASpawnPoint_destroy=1,ASpawnPoint
_sc__ASpawnPoint_destroy_Defaults=0
_sc__ASpawnPoint_destroy_Limits=
_sc__ASpawnPoint_destroy_Category=TC_ASL_SYSTEMS_WORLD

sc__ARoutine_destroy=1,ARoutine
_sc__ARoutine_destroy_Defaults=0
_sc__ARoutine_destroy_Limits=
_sc__ARoutine_destroy_Category=TC_ASL_SYSTEMS_WORLD

//***************************************************************************
[TriggerCalls]
// Defines function calls which may be used as parameter values
// Key: Function name
// Value 0: first game version in which this function is valid
// Value 1: flag (0 or 1) indicating if the call can be used in events
// Value 2: return type
// Value 3+: argument types
//
// Note: Operators are specially handled by the editor

// ASL
// returns integer
FindString=1,0,integer,string,string
_FindString_Defaults=_,_
_FindString_Category=TC_ASL_CORE_STRING

// returns string
ReplaceSubString=1,0,string,string,integer,string
_ReplaceSubString_Defaults=_,0,_
_ReplaceSubString_Category=TC_ASL_CORE_STRING

// returns string
ReplaceString=1,0,string,string,string,string
_ReplaceString_Defaults=_,_,_
_ReplaceString_Category=TC_ASL_CORE_STRING

// returns string
RemoveSubString=1,0,string,string,integer,integer
_RemoveSubString_Defaults=_,0,StringLength
_RemoveSubString_Category=TC_ASL_CORE_STRING

// returns string
RemoveString=1,0,string,string,string
_RemoveString_Defaults=_,SubStringBJ
_RemoveString_Category=TC_ASL_CORE_STRING

// ASL - Core - Environment

// returns boolean
IsUnitInvulnerable=1,0,boolean,unit
_IsUnitInvulnerable_Defaults=_
_IsUnitInvulnerable_Category=TC_ASL_CORE_ENVIRONMENT

// returns integer
GetUnitAllianceStateToUnit=1,0,alliancesetting,unit,unit
_GetUnitAllianceStateToUnit_Defaults=_,_
_GetUnitAllianceStateToUnit_Category=TC_ASL_CORE_ENVIRONMENT

// returns boolean
IsUnitSpellResistant=1,0,boolean,unit
_IsUnitSpellResistant_Defaults=_
_IsUnitSpellResistant_Category=TC_ASL_CORE_ENVIRONMENT

// returns boolean
IsUnitSpellImmune=1,0,boolean,unit
_IsUnitSpellImmune_Defaults=_
_IsUnitSpellImmune_Category=TC_ASL_CORE_ENVIRONMENT

// returns real
GetUnitArmor=1,0,real,unit
_GetUnitArmor_Defaults=_
_GetUnitArmor_Category=TC_ASL_CORE_ENVIRONMENT

// ASL - BonusMod

// returns integer
AUnitGetBonus=1,0,integer,unit,ABonusType
_AUnitGetBonus_Defaults=GetTriggerUnit,ABonusTypeDamage
_AUnitGetBonus_Limits=_,_
_AUnitGetBonus_Category=TC_ASL_SYSTEMS_BONUS_MOD

// returns boolean
AUnitSetBonus=1,0,boolean,unit,ABonusType,integer
_AUnitSetBonus_Defaults=GetTriggerUnit,ABonusTypeDamage,0
_AUnitSetBonus_Limits=_,_,_
_AUnitSetBonus_Category=TC_ASL_SYSTEMS_BONUS_MOD

// returns boolean
AUnitClearBonus=1,0,boolean,unit,ABonusType
_AUnitClearBonus_Defaults=GetTriggerUnit,ABonusTypeDamage
_AUnitClearBonus_Limits=_,_
_AUnitClearBonus_Category=TC_ASL_SYSTEMS_BONUS_MOD

// returns boolean
AUnitAddBonus=1,0,boolean,unit,ABonusType,integer
_AUnitAddBonus_Defaults=GetTriggerUnit,ABonusTypeDamage,0
_AUnitAddBonus_Limits=_,_,_
_AUnitAddBonus_Category=TC_ASL_SYSTEMS_BONUS_MOD

// returns boolean
AUnitRemoveBonus=1,0,boolean,unit,ABonusType,integer
_AUnitRemoveBonus_Defaults=GetTriggerUnit,ABonusTypeDamage,0
_AUnitRemoveBonus_Limits=_,_,_
_AUnitRemoveBonus_Category=TC_ASL_SYSTEMS_BONUS_MOD

// returns ASpawnPoint
sc__ASpawnPoint_create=1,0,ASpawnPoint,real,real,real
_sc__ASpawnPoint_create_Defaults=0.0,0.0,0.0
_sc__ASpawnPoint_create_Limits=_,_,_,_
_sc__ASpawnPoint_create_Category=TC_ASL_SYSTEMS_WORLD

// returns ARoutine
sc__ARoutine_create=1,0,ARoutine,boolean,boolean,integer,integer,integer
_sc__ARoutine_create_Defaults=false,false,0,0,0
_sc__ARoutine_create_Limits=_,_,_,_
_sc__ARoutine_create_Category=TC_ASL_SYSTEMS_WORLD


//***************************************************************************
[DefaultTriggerCategories]
// Defines categories to be automatically added to new maps
NumCategories=1

Category01=WESTRING_INITIALIZATION


//***************************************************************************
[DefaultTriggers]
// Defines triggers to be automatically added to new maps
NumTriggers=2

// Melee Initialization
Trigger01Name=WESTRING_MELEEINITIALIZATION
Trigger01Comment=WESTRING_MELEEINITIALIZATION_COMMENT
Trigger01Category=1
Trigger01Events=1
Trigger01Event01=MapInitializationEvent
Trigger01Conditions=0
Trigger01Actions=8
Trigger01Action01=MeleeStartingVisibility
Trigger01Action02=MeleeStartingHeroLimit
Trigger01Action03=MeleeGrantHeroItems
Trigger01Action04=MeleeStartingResources
Trigger01Action05=MeleeClearExcessUnits
Trigger01Action06=MeleeStartingUnits
Trigger01Action07=MeleeStartingAI
Trigger01Action08=MeleeInitVictoryDefeat

Trigger02Name=WESTRING_ASL_TRIG_INIT
Trigger02Comment=WESTRING_ASL_TRIG_INIT_COMMENT
Trigger02Category=1
Trigger02Events=1
Trigger02Event01=MapInitializationEvent
Trigger02Conditions=0
Trigger02Actions=1
Trigger02Action01=sc__Asl_init
// initialize all other ASL structs here